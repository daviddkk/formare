.Input,
.Textarea,
.Select {
  width: 100%;
}

.Input,
.Select > select,
.Textarea {
  width: 100%;
  position: relative;
  padding: $input-spacing;
  transition: $input-transition;
  font-size: $input-font-size;
  background-color: $input-background;
  border-style: $input-border-style;
  border-width: $input-border-width;
  border-color: $input-border-color;
  border-radius: $input-border-radius;
  outline: none;
  white-space: normal;

  &:focus {
    border-color: $input-focused-border-color;
    box-shadow: $input-focused-box-shadow;
  }

  &:disabled {
    background-color: $input-disabled-background;
    cursor: not-allowed;
  }

  &:hover:not(:disabled) {
    border-color: $input-hovered-border-color;
  }

  @each $theme, $color in $color-themes {
    &--#{$theme} {
      border-color: tint($color, 20%);

      &:not(:disabled) {
        &:hover {
          border-color: tint($color, 10%);
        }
      }

      &:focus {
        border-color: $color;
        box-shadow: 0
          0
          $input-focused-box-shadow-blur
          $input-focused-box-shadow-spread
          rgba(tint($color, 15%), 0.3);
      }
    }
  }

  @each $size, $value in $font-sizes {
    &--#{$size} {
      font-size: $value;
      padding: spacing($size);
    }
  }

  &--rounded {
    border-radius: $border-radius-rounded;
  }
}

.Select {
  position: relative;

  > select {
    -webkit-appearance: none;
    -moz-appearance: none;
    padding-right: 3em;
    cursor: pointer;
  }

  &:not(&--loading) {
    &:after {
      content: '';
      transition: all 150ms ease-out-out;
      position: absolute;
      top: $input-spacing-y * 1.5;
      right: $input-spacing-x;
      display: block;
      height: 0.65em;
      border: 2px solid transparent;
      border-color: $gray;
      border-right: 0;
      border-top: 0;
      transform: rotate(-45deg);
      width: 0.65em;
    }

    &:focus-within {
      &:after {
        transform: translateY(30%) rotate(135deg);
        border-color: $primary-color;
      }
    }
  }

  &--loading {
    &:after {
      content: '';
      animation: spinAround 750ms linear infinite;
      display: block;
      width: 1em;
      height: 1em;
      position: absolute;
      top: $input-spacing-y * 1.5;
      right: $input-spacing-x;
      border: 2px solid $gray;
      border-top-color: transparent;
      border-radius: 100%;
    }
  }
}

.Checkbox {
  position: relative;
  display: flex;
  flex-direction: row;
  align-items: center;

  > *:first-child {
    margin-right: spacing(small);
  }

  > [type='checkbox'] {
    position: relative;
    appearance: none;
    outline: none;
    height: $checkbox-height;
    width: $checkbox-width;

    &:before {
      content: '';
      transition: $checkbox-transition;
      display: inline-block;
      border-style: $checkbox-border-style;
      border-width: $checkbox-border-width;
      border-color: $checkbox-border-color;
      height: $checkbox-height;
      width: $checkbox-width;
      border-radius: $checkbox-border-radius;
    }

    &:after {
      content: '';
      transition: all 200ms ease-out;
      position: absolute;
      top: 50%;
      left: 50%;
      border: solid 2px $white;
      border-top: none;
      border-left: none;
      height: 12px;
      width: 6px;
      line-height: 0;
      transform: translate(-50%, -60%) rotate(45deg) scale(0.8);
      transform-origin: center center;
      opacity: 0;
      font-weight: bold;
    }

    &:checked {
      &:before {
        border-color: $checkbox-checked-border-color;
        background-color: $checkbox-checked-bg-color;
      }

      &:after {
        color: $checkbox-checked-fg-color;
        transform: translate(-50%, -60%) rotate(45deg) scale(1);
        opacity: 1;
      }
    }

    &:focus {
      &:before {
        box-shadow: $input-focused-box-shadow;
      }
    }
  }

  &:hover {
    > [type='checkbox'] {
      &:before {
        border-color: $primary-color;
      }
    }
  }

  @each $theme, $color in $color-themes {
    &--#{$theme} {
      > [type='checkbox'] {
        &:before {
          border-color: $color;
        }

        &:checked {
          &:before {
            background-color: $color;
            border-color: $color;
          }
        }
      }
    }
  }
}
